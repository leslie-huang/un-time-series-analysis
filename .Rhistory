View(proportions_by_org_grouped)
rowSums(proportions_by_org_grouped)
rownames(proportions_by_org_grouped) <- rownames(proportions_by_org)
View(proportions_by_org_grouped)
write.csv(proportions_by_org, "topic_proportions_by_org.csv")
write.csv(proportions_by_org, file = "topic_proportions_by_org.csv")
View(proportions_by_org)
getwd()
setwd("./")
getwd()
dirname(parent.frame(2)$ofile)
source("un-analysis.cluster.R")
dirname("un-analysis-cluster.R")
source("un-analysis-cluster.R")
Sys.getenv()
Sys.getenv("home")
Sys.getenv("R_HOME")
Sys.getenv("HOME")
parallel::detect.Cores()
detect.Cores()
detectCores()
parallel::detectCores()
load("/Users/lesliehuang/un-analysis/un_img_new_dfm.RData")
rm(result)
rm(result3)
rm(result2)
save.image("un_base_workspace.RData")
num_cores <- max(parallel::detectCores() - 1, 1)
print(num_cores)
print(num_cores)
load("/Users/lesliehuang/Desktop/un_img_new_dfm_10-30-17.RData")
load("/Users/lesliehuang/Desktop/un_img_new_dfm_75.RData")
load("~/Desktop/un_model_50.RData")
load("~/Desktop/un_model_65.RData")
load("~/Desktop/un_model_75.RData")
save.image("~Desktop/un_models.RData")
save.image("~/Desktop/un_models.RData")
View(result_20)
load("/Users/lesliehuang/un_findk_21.RData")
load("/Users/lesliehuang/un_findk_22.RData")
load("/Users/lesliehuang/un_findk_25.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_30.RData")
load("/Users/lesliehuang/Desktop/un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_29.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_tuning_combined.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_32.RData")
load("/Users/lesliehuang/un_findk_37.RData")
load("/Users/lesliehuang/un_findk_40.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_50.RData")
load("/Users/lesliehuang/un_findk_51.RData")
load("/Users/lesliehuang/un_findk_53.RData")
load("/Users/lesliehuang/un_findk_58.RData")
load("/Users/lesliehuang/un_tuning_combined.RData")
save.image("un_tuning_combined.RData")
View(result_20)
load("/Users/lesliehuang/Desktop/un_findk1.RData")
View(result)
View(result_40)
View(result)
View(result_40)
View(result)
View(result_50)
View(result)
load("/Users/lesliehuang/un_findk_55.RData")
load("/Users/lesliehuang/un_findk_57.RData")
load("/Users/lesliehuang/un_findk_60.RData")
load("/Users/lesliehuang/un_findk_61.RData")
load("/Users/lesliehuang/un_findk_63.RData")
load("/Users/lesliehuang/un_findk_65.RData")
load("/Users/lesliehuang/un_findk_68.RData")
load("/Users/lesliehuang/un_findk_75.RData")
load("/Users/lesliehuang/un_tuning_combined.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_95.RData")
load("/Users/lesliehuang/un_findk_93.RData")
load("/Users/lesliehuang/un_findk_90.RData")
load("/Users/lesliehuang/un_findk_89.RData")
load("/Users/lesliehuang/un_findk_87.RData")
load("/Users/lesliehuang/un_findk_82.RData")
load("/Users/lesliehuang/un_findk_81.RData")
load("/Users/lesliehuang/un_findk_79.RData")
load("/Users/lesliehuang/un_findk_77.RData")
load("/Users/lesliehuang/un_findk_72.RData")
load("/Users/lesliehuang/un_findk_69.RData")
load("/Users/lesliehuang/un_findk_68.RData")
load("/Users/lesliehuang/un_findk_64.RData")
load("/Users/lesliehuang/un_findk_47.RData")
load("/Users/lesliehuang/un_findk_42.RData")
load("/Users/lesliehuang/un_findk_80.RData")
load("/Users/lesliehuang/un_findk_85.RData")
load("/Users/lesliehuang/un_tuning_combined.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/perplexity_65.RData")
perplexity_test_60
load("/Users/lesliehuang/perplexitytest_60.RData")
load("/Users/lesliehuang/perplexitytest_65.RData")
load("/Users/lesliehuang/perplexitytest_70.RData")
load("/Users/lesliehuang/perplexitytest_75.RData")
load("/Users/lesliehuang/perplexitytest_80.RData")
save.image("perplexitytest_combined.RData")
View(perplexity_results_55)
View(perplexity_results_55)
load("/Users/lesliehuang/kfold_perplexity_60.RData")
load("/Users/lesliehuang/kfold_perplexity_65.RData")
View(perplexity_results_60)
load("/Users/lesliehuang/kfold_perplexity_70.RData")
load("/Users/lesliehuang/kfold_perplexity_75.RData")
load("/Users/lesliehuang/kfold_perplexity_80.RData")
View(perplexity_results_55)
save.image("perplexity_kfold_combined.RData")
load("/Users/lesliehuang/kfold_perplexity_40.RData")
save(tab, file = "test.RData")
View(tab)
load("~/un-analysis/full_tm_workspace.RData")
model_75
model_75$gamma
model_75@gamma
View(model_75@gamma)
topic_distr_over_docs <- model_75@gamma
write.csv(topic_distr_over_docs, file = "topic_distr_over_docs_75.csv")
colMeans(topic_distr_over_docs)
max(colMeans(topic_distr_over_docs))
qplot(seq(1,75,1), colMeans(topic_distr_over_docs), xlab = "Topic number", ylab = "Mean proportion of documents") + geom_line() + ggtitle("Mean topic distribution over documents")
library(ggplot2)
qplot(seq(1,75,1), colMeans(topic_distr_over_docs), xlab = "Topic number", ylab = "Mean proportion of documents") + geom_line() + ggtitle("Mean topic distribution over documents")
qplot(seq(1,75,1), colMeans(topic_distr_over_docs), xlab = "Topic number", ylab = "Mean proportion of documents") + geom_point() + ggtitle("Mean topic distribution over documents")
ggsave("topicdistr.png", device = "png")
qplot(seq(1,75,1), colMeans(topic_distr_over_docs), xlab = "Topic number", ylab = "Mean proportion of documents (0.01 = 1%)") + geom_point() + ggtitle("Mean topic distribution over documents")
ggsave("topicdistr.png", device = "png")
qplot(seq(1,75,1), mean_topic_distr, xlab = "Topic number", ylab = "Mean proportion of documents (0.01 = 1%)") + geom_point() + ggtitle("Mean topic distribution over documents")
mean_topic_distr <- colMeans(topic_distr_over_docs)
qplot(seq(1,75,1), mean_topic_distr, xlab = "Topic number", ylab = "Mean proportion of documents (0.01 = 1%)") + geom_point() + ggtitle("Mean topic distribution over documents")
ggsave("topicdistr.png", device = "png")
qplot(seq(1,65,1), colMeans(model_65@gamma), xlab = "Topic number", ylab = "Mean proportion of documents (0.01 = 1%)") + geom_point() + ggtitle("Mean topic distribution over documents")
qplot(seq(1,75,1), mean_topic_distr, xlab = "Topic number", ylab = "Mean proportion of documents (0.01 = 1%)") + geom_point() + ggtitle("Mean topic distribution over documents with 75 topics")
ggsave("topicdistr.png", device = "png")
qplot(seq(1,65,1), colMeans(model_65@gamma), xlab = "Topic number", ylab = "Mean proportion of documents (0.01 = 1%)") + geom_point() + ggtitle("Mean topic distribution over documents with 65 topics")
load("/Users/lesliehuang/un_findk_110.RData")
load("/Users/lesliehuang/un_findk_120.RData")
load("/Users/lesliehuang/un_findk_130.RData")
load("/Users/lesliehuang/un_findk_140.RData")
load("/Users/lesliehuang/un_findk_150.RData")
load("/Users/lesliehuang/un_findk_160.RData")
load("/Users/lesliehuang/un_findk_170.RData")
load("/Users/lesliehuang/un_findk_180.RData")
load("/Users/lesliehuang/un_findk_190.RData")
load("/Users/lesliehuang/un_findk_200.RData")
load("/Users/lesliehuang/un_findk_210.RData")
load("/Users/lesliehuang/un_findk_220.RData")
load("/Users/lesliehuang/un_findk_230.RData")
load("/Users/lesliehuang/un_findk_240.RData")
load("/Users/lesliehuang/un_findk_250.RData")
load("/Users/lesliehuang/un_findk_270.RData")
save.image("moretuning.RData")
load("/Users/lesliehuang/un_findk_260.RData")
load("/Users/lesliehuang/un_findk_280.RData")
load("/Users/lesliehuang/un_findk_290.RData")
save.image("moretuning.RData")
load("/Users/lesliehuang/un_findk_96.RData")
load("/Users/lesliehuang/un_findk_95.RData")
load("/Users/lesliehuang/un_findk_93.RData")
load("/Users/lesliehuang/un_findk_92.RData")
load("/Users/lesliehuang/un_findk_91.RData")
load("/Users/lesliehuang/un_findk_90.RData")
load("/Users/lesliehuang/un_findk_89.RData")
load("/Users/lesliehuang/un_findk_88.RData")
load("/Users/lesliehuang/un_findk_87.RData")
load("/Users/lesliehuang/un_findk_86.RData")
load("/Users/lesliehuang/un_findk_84.RData")
load("/Users/lesliehuang/un_findk_82.RData")
load("/Users/lesliehuang/un_findk_81.RData")
load("/Users/lesliehuang/un_findk_80.RData")
load("/Users/lesliehuang/un_findk_78.RData")
load("/Users/lesliehuang/un_findk_79.RData")
load("/Users/lesliehuang/un_findk_45.RData")
load("/Users/lesliehuang/un_findk_75.RData")
load("/Users/lesliehuang/un_findk_20.RData")
load("/Users/lesliehuang/un_findk_25.RData")
load("/Users/lesliehuang/un_findk_28.RData")
load("/Users/lesliehuang/un_findk_29.RData")
load("/Users/lesliehuang/un_findk_43.RData")
load("/Users/lesliehuang/un_findk_44.RData")
load("/Users/lesliehuang/un_findk_47.RData")
load("/Users/lesliehuang/un_findk_50.RData")
load("/Users/lesliehuang/un_findk_51.RData")
load("/Users/lesliehuang/un_findk_53.RData")
load("/Users/lesliehuang/un_findk_56.RData")
load("/Users/lesliehuang/un_findk_58.RData")
load("/Users/lesliehuang/un_findk_60.RData")
load("/Users/lesliehuang/un_findk_62.RData")
load("/Users/lesliehuang/un_findk_63.RData")
load("/Users/lesliehuang/un_findk_64.RData")
load("/Users/lesliehuang/un_findk_65.RData")
load("/Users/lesliehuang/un_findk_66.RData")
load("/Users/lesliehuang/un_findk_67.RData")
load("/Users/lesliehuang/un_findk_68.RData")
load("/Users/lesliehuang/un_findk_69.RData")
load("/Users/lesliehuang/un_findk_70.RData")
load("/Users/lesliehuang/un_findk_72.RData")
load("/Users/lesliehuang/un_findk_73.RData")
load("/Users/lesliehuang/un_findk_74.RData")
load("/Users/lesliehuang/un_findk_76.RData")
load("/Users/lesliehuang/un_findk_77.RData")
View(tab)
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_52.RData")
load("/Users/lesliehuang/un_findk_26.RData")
load("/Users/lesliehuang/un_findk_39.RData")
load("/Users/lesliehuang/un_findk_42.RData")
load("/Users/lesliehuang/un_findk_37.RData")
load("/Users/lesliehuang/un_findk_49.RData")
load("/Users/lesliehuang/un_findk_54.RData")
load("/Users/lesliehuang/un_findk_57.RData")
load("/Users/lesliehuang/un_model_75.RData")
load("/Users/lesliehuang/un_findk_42.RData")
load("/Users/lesliehuang/un_findk_22.RData")
load("/Users/lesliehuang/un_findk_23.RData")
load("/Users/lesliehuang/un_findk_26.RData")
load("/Users/lesliehuang/un_findk_32.RData")
load("/Users/lesliehuang/un_findk_31.RData")
load("/Users/lesliehuang/un_findk_49.RData")
load("/Users/lesliehuang/un_findk_33.RData")
load("/Users/lesliehuang/un_findk_35.RData")
load("/Users/lesliehuang/un_findk_36.RData")
load("/Users/lesliehuang/un_findk_37.RData")
load("/Users/lesliehuang/un_findk_38.RData")
load("/Users/lesliehuang/un_findk_39.RData")
load("/Users/lesliehuang/un_findk_40.RData")
load("/Users/lesliehuang/un_findk_46.RData")
load("/Users/lesliehuang/un_findk_52.RData")
load("/Users/lesliehuang/un_findk_54.RData")
load("/Users/lesliehuang/un_findk_57.RData")
load("/Users/lesliehuang/un_findk_100.RData")
load("/Users/lesliehuang/un_findk_40.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_34.RData")
load("/Users/lesliehuang/un_tuning_combined.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_110.RData")
load("/Users/lesliehuang/un_findk_99.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_135.RData")
load("/Users/lesliehuang/un_findk_97.RData")
load("/Users/lesliehuang/un_findk_140.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/kfold_perplexity_41.RData")
load("/Users/lesliehuang/kfold_perplexity_42.RData")
load("/Users/lesliehuang/kfold_perplexity_43.RData")
load("/Users/lesliehuang/kfold_perplexity_44.RData")
load("/Users/lesliehuang/kfold_perplexity_46.RData")
load("/Users/lesliehuang/kfold_perplexity_45.RData")
load("/Users/lesliehuang/kfold_perplexity_47.RData")
load("/Users/lesliehuang/kfold_perplexity_48.RData")
save.image("perplexity_kfold_combined.RData")
load("/Users/lesliehuang/un_findk_150.RData")
load("/Users/lesliehuang/un_findk_24.RData")
load("/Users/lesliehuang/un_findk_155.RData")
load("/Users/lesliehuang/un_findk_145.RData")
load("/Users/lesliehuang/un_findk_21.RData")
load("/Users/lesliehuang/un_findk_160.RData")
load("/Users/lesliehuang/un_findk_165.RData")
load("/Users/lesliehuang/un_findk_170.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/kfold_perplexity_51.RData")
load("/Users/lesliehuang/kfold_perplexity_40.RData")
load("/Users/lesliehuang/kfold_perplexity_50.RData")
load("/Users/lesliehuang/kfold_perplexity_52.RData")
load("/Users/lesliehuang/kfold_perplexity_49.RData")
load("/Users/lesliehuang/kfold_perplexity_53.RData")
load("/Users/lesliehuang/kfold_perplexity_54.RData")
load("/Users/lesliehuang/kfold_perplexity_55.RData")
load("/Users/lesliehuang/kfold_perplexity_56.RData")
load("/Users/lesliehuang/kfold_perplexity_57.RData")
load("/Users/lesliehuang/kfold_perplexity_58.RData")
save.image("perplexity_kfold_combined.RData")
load("/Users/lesliehuang/un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_175.RData")
load("/Users/lesliehuang/un_findk_105.RData")
load("/Users/lesliehuang/un_findk_41.RData")
load("/Users/lesliehuang/un_findk_61.RData")
load("/Users/lesliehuang/un_findk_190.RData")
load("/Users/lesliehuang/un_findk_240.RData")
load("/Users/lesliehuang/un_findk_250.RData")
load("/Users/lesliehuang/un_findk_290.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/kfold_perplexity_61.RData")
load("/Users/lesliehuang/kfold_perplexity_68.RData")
load("/Users/lesliehuang/kfold_perplexity_63.RData")
save.image("perplexity_kfold_combined.RData")
View(perplexity_results_47)
load("/Users/lesliehuang/un_findk_210.RData")
load("/Users/lesliehuang/un_findk_215.RData")
load("/Users/lesliehuang/un_findk_265.RData")
load("/Users/lesliehuang/un_findk_180.RData")
load("/Users/lesliehuang/un_findk_205.RData")
load("/Users/lesliehuang/un_findk_295.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/kfold_perplexity_86.RData")
load("/Users/lesliehuang/kfold_perplexity_82.RData")
load("/Users/lesliehuang/kfold_perplexity_79.RData")
load("/Users/lesliehuang/kfold_perplexity_77.RData")
load("/Users/lesliehuang/kfold_perplexity_85.RData")
save.image("perplexity_kfold_combined.RData")
### Set up the workspace
rm(list=ls())
setwd("/Users/lesliehuang/un-analysis-reg/")
set.seed(1234)
libraries <- c("foreign", "utils", "dplyr", "plyr", "devtools", "quanteda", "stringi", "topicmodels", "ldatuning", "lda", "plm", "stargazer", "ggplot2", "tseries", "lmtest", "car")
lapply(libraries, require, character.only=TRUE)
data <- read.csv("../un-jupyter-coding-merging/data_by_country_year_topic_voting_only.csv", stringsAsFactors = TRUE)
# filter to voting resolutions
data$log_gdp <- log(data$gdp)
data$speech_pct <- data$speech_proportion * 100
data$agenda_pct <- data$proportion_of_agenda * 100
data$country_topic <- with(data, paste(country, topic, sep = "_"))
data$country_topic <- as.factor(data$country_topic)
data$sc_membership <- as.factor(data$sc_membership)
# do first difference of variables
data$log_gdp_diff <- c(0, diff(data$log_gdp, lag = 1, differences = 1) )
data$speech_pct_diff <- c(0, diff(data$speech_pct, lag = 1, differences = 1) )
data$speech_proportion_diff <- c(0, diff(data$speech_proportion, lag = 1, differences = 1) )
data$agenda_pct_diff <- c(0, diff(data$agenda_pct, lag = 1, differences = 1) )
data$speech_pct_logit <- logit(data$speech_pct, percents = TRUE)
data$agenda_pct_logit <- logit(data$agenda_pct, percents = TRUE)
#######################################
# Function to run ALL the panel data tests for a given formula and data subset
all_panel_tests <- function(formula_spec, formula_spec_without_time_fe, data_subset, indices) {
### Set up all the equations for comparison:
# OLS
ols.reg <- lm(formula_spec, data = data_subset)
# Pooling
plm.pool <- plm(formula_spec, data = data_subset, index = indices, model = "pooling")
# FE
plm.reg <- plm(formula_spec, data = data_subset, index = indices, effect = "twoways")
# RE
# RE cannot be solved with the specifications with interaction terms
#re.reg <- plm(formula_spec, data = data_subset, index = c("country_topic", "year"), model = "random")
# FE without time
plm.reg.notime <- plm(formula_spec_without_time_fe, data = data_subset, index = indices, effect = "twoways")
# Check that FE is better than OLS
print("Check that FE is better than OLS using F test using pFtest:")
print(pFtest(plm.reg, ols.reg))
print("and pooled OLS using plmtest Lagrange Multiplier Test: ")
print(plmtest(plm.pool, type="bp"))
print("-----------------------------------------")
# Decide between FE and RE
print("Decide between FE and RE using Hausman test: ")
#print(phtest(plm.reg, re.reg))
print("-----------------------------------------")
# FE constants for each unit
#print("FE constants for each unit:")
#print(fixef(plm.reg))
print("-----------------------------------------")
# FE for time
print("Test that time FE are needed w F test with pFtest: ")
print(pFtest(plm.reg.notime, plm.reg))
print("and with Lagrange Multiplier test: ")
print(plmtest(plm.reg, effect = "time", type="bp")) )
print("-----------------------------------------")
# Testing for serial correlation with the Breusch-Godfrey/Wooldridge test
print("Testing for serial correlation with the Breusch-Godfrey/Wooldridge test, null is no serial correlation: ")
print(pbgtest(plm.reg))
print("-----------------------------------------")
# Breusch-Pagan test for heteroskedasticity
print("Breusch-Pagan test for heteroskedasticity, null is homoskedasticity: ")
print(bptest(formula_spec, data = data_subset, studentize = F))
print("-----------------------------------------")
# Testing for stationarity with augmented Dickey-Fuller Test
print("Testing for stationarity with augmented Dickey-Fuller Test, null is series has a unit root & is non stationary: ")
panels <- plm.data(data_subset, index = indices)
print(adf.test(panels$agenda_pct, k = 2)) # hard coded
print("-----------------------------------------")
print("Summary of the FE panel model: -----")
print(summary(plm.reg))
print("Summary of the pooled OLS")
print(summary(ols.reg))
}
# Formulas
f <- agenda_pct ~ speech_pct + log_gdp + temp_member + factor(year)
f_without_time_fe <- agenda_pct ~ speech_pct + log_gdp + temp_member
f2 <- agenda_pct ~ speech_proportion + log_gdp + sc_membership + sc_membership * speech_proportion + factor(year)
f2_without_time_fe <- agenda_pct ~ speech_proportion + log_gdp + sc_membership + sc_membership * speech_proportion
f3 <- agenda_pct ~ speech_proportion + log_gdp + sc_membership + sc_membership * speech_proportion + sc_membership * log_gdp + factor(year)
f3_without_time_fe <- agenda_pct ~ speech_proportion + log_gdp + sc_membership + sc_membership * speech_proportion + sc_membership * log_gdp
f4 <- agenda_pct ~ speech_proportion + log_gdp + sc_membership + sc_membership * speech_proportion + sc_membership * log_gdp + log_gdp * speech_proportion + factor(year)
# Formulas with first difference
f_diff <- agenda_pct_diff ~ speech_proportion_diff + log_gdp + temp_member + factor(year)
f_without_time_fe_diff <- agenda_pct_diff ~ speech_proportion_diff + log_gdp + temp_member
f2_diff <- agenda_pct_diff ~ speech_proportion_diff + log_gdp_diff + sc_membership + sc_membership * speech_proportion_diff + factor(year)
f2_without_time_fe_diff <- agenda_pct_diff ~ speech_proportion_diff + log_gdp_diff + sc_membership + sc_membership * speech_proportion_diff
f3_diff <- agenda_pct_diff ~ speech_proportion_diff + log_gdp_diff + sc_membership + sc_membership * speech_proportion_diff + sc_membership * log_gdp_diff + factor(year)
f3_without_time_fe_diff <- agenda_pct_diff ~ speech_proportion_diff + log_gdp_diff + sc_membership + sc_membership * speech_proportion_diff + sc_membership * log_gdp_diff
f4_diff <- agenda_pct_diff ~ speech_proportion_diff + log_gdp_diff + sc_membership + sc_membership * speech_proportion_diff + sc_membership * log_gdp_diff + log_gdp_diff * speech_proportion_diff + factor(year)
# Formulas with logit X and Y
f_lgt <- agenda_pct_logit ~ speech_pct_logit + log_gdp + temp_member + factor(year)
f_without_time_fe_lgt <- agenda_pct_logit ~ speech_pct_logit + log_gdp + temp_member
f2_lgt <- agenda_pct_logit ~ speech_pct_logit  + log_gdp + sc_membership + sc_membership * speech_pct_logit + factor(year)
f2_without_time_fe_lgt <- agenda_pct_logit ~ speech_pct_logit + log_gdp + sc_membership + sc_membership * speech_pct_logit
f3_lgt <- agenda_pct_logit ~ speech_pct_logit  + log_gdp + sc_membership + sc_membership * speech_pct_logit + sc_membership * log_gdp + factor(year)
f3_without_time_fe_lgt <- agenda_pct_logit ~ speech_pct_logit  + log_gdp + sc_membership + sc_membership * speech_pct_logit + sc_membership * log_gdp
f4_lgt <- agenda_pct_logit ~ speech_pct_logit + log_gdp + sc_membership + sc_membership * speech_pct_logit + sc_membership * log_gdp + log_gdp * speech_pct_logit + factor(year)
################################
# Run it with country-topic spec
ct_index <- c("country_topic","year")
all_panel_tests(f, f_without_time_fe, data, ct_index)
################################
# Topic-specific printout
c_index <- c("country", "year")
### Set up the workspace
rm(list=ls())
setwd("/Users/lesliehuang/un-analysis-reg/")
set.seed(1234)
libraries <- c("foreign", "utils", "dplyr", "plyr", "devtools", "quanteda", "stringi", "topicmodels", "ldatuning", "lda", "plm", "stargazer", "ggplot2", "tseries", "lmtest", "car")
lapply(libraries, require, character.only=TRUE)
data <- read.csv("../un-jupyter-coding-merging/data_by_country_year_topic_voting_only.csv", stringsAsFactors = TRUE)
# filter to voting resolutions
data$log_gdp <- log(data$gdp)
data$speech_pct <- data$speech_proportion * 100
data$agenda_pct <- data$proportion_of_agenda * 100
data$country_topic <- with(data, paste(country, topic, sep = "_"))
data$country_topic <- as.factor(data$country_topic)
data$sc_membership <- as.factor(data$sc_membership)
# do first difference of variables
data$log_gdp_diff <- c(0, diff(data$log_gdp, lag = 1, differences = 1) )
data$speech_pct_diff <- c(0, diff(data$speech_pct, lag = 1, differences = 1) )
data$speech_proportion_diff <- c(0, diff(data$speech_proportion, lag = 1, differences = 1) )
data$agenda_pct_diff <- c(0, diff(data$agenda_pct, lag = 1, differences = 1) )
data$speech_pct_logit <- logit(data$speech_pct, percents = TRUE)
data$agenda_pct_logit <- logit(data$agenda_pct, percents = TRUE)
#######################################
# Function to run ALL the panel data tests for a given formula and data subset
all_panel_tests <- function(formula_spec, formula_spec_without_time_fe, data_subset, indices) {
### Set up all the equations for comparison:
# OLS
ols.reg <- lm(formula_spec, data = data_subset)
# Pooling
plm.pool <- plm(formula_spec, data = data_subset, index = indices, model = "pooling")
# FE
plm.reg <- plm(formula_spec, data = data_subset, index = indices, effect = "twoways")
# RE
# RE cannot be solved with the specifications with interaction terms
#re.reg <- plm(formula_spec, data = data_subset, index = c("country_topic", "year"), model = "random")
# FE without time
plm.reg.notime <- plm(formula_spec_without_time_fe, data = data_subset, index = indices, effect = "twoways")
# Check that FE is better than OLS
print("Check that FE is better than OLS using F test using pFtest:")
print(pFtest(plm.reg, ols.reg))
print("and pooled OLS using plmtest Lagrange Multiplier Test: ")
print(plmtest(plm.pool, type="bp")))
print("-----------------------------------------")
# Decide between FE and RE
print("Decide between FE and RE using Hausman test: ")
#print(phtest(plm.reg, re.reg))
print("-----------------------------------------")
# FE constants for each unit
#print("FE constants for each unit:")
#print(fixef(plm.reg))
print("-----------------------------------------")
# FE for time
print("Test that time FE are needed w F test with pFtest: ")
print(pFtest(plm.reg.notime, plm.reg))
print("and with Lagrange Multiplier test: ")
print(plmtest(plm.reg, effect = "time", type="bp")) )
print("-----------------------------------------")
# Testing for serial correlation with the Breusch-Godfrey/Wooldridge test
print("Testing for serial correlation with the Breusch-Godfrey/Wooldridge test, null is no serial correlation: ")
print(pbgtest(plm.reg))
print("-----------------------------------------")
# Breusch-Pagan test for heteroskedasticity
print("Breusch-Pagan test for heteroskedasticity, null is homoskedasticity: ")
print(bptest(formula_spec, data = data_subset, studentize = F))
print("-----------------------------------------")
# Testing for stationarity with augmented Dickey-Fuller Test
print("Testing for stationarity with augmented Dickey-Fuller Test, null is series has a unit root & is non stationary: ")
panels <- plm.data(data_subset, index = indices)
print(adf.test(panels$agenda_pct, k = 2)) # hard coded
print("-----------------------------------------")
print("Summary of the FE panel model: -----")
print(summary(plm.reg))
print("Summary of the pooled OLS")
print(summary(ols.reg))
}
# Formulas
f <- agenda_pct ~ speech_pct + log_gdp + temp_member + factor(year)
f_without_time_fe <- agenda_pct ~ speech_pct + log_gdp + temp_member
f2 <- agenda_pct ~ speech_proportion + log_gdp + sc_membership + sc_membership * speech_proportion + factor(year)
f2_without_time_fe <- agenda_pct ~ speech_proportion + log_gdp + sc_membership + sc_membership * speech_proportion
f3 <- agenda_pct ~ speech_proportion + log_gdp + sc_membership + sc_membership * speech_proportion + sc_membership * log_gdp + factor(year)
f3_without_time_fe <- agenda_pct ~ speech_proportion + log_gdp + sc_membership + sc_membership * speech_proportion + sc_membership * log_gdp
f4 <- agenda_pct ~ speech_proportion + log_gdp + sc_membership + sc_membership * speech_proportion + sc_membership * log_gdp + log_gdp * speech_proportion + factor(year)
# Formulas with first difference
f_diff <- agenda_pct_diff ~ speech_proportion_diff + log_gdp + temp_member + factor(year)
f_without_time_fe_diff <- agenda_pct_diff ~ speech_proportion_diff + log_gdp + temp_member
f2_diff <- agenda_pct_diff ~ speech_proportion_diff + log_gdp_diff + sc_membership + sc_membership * speech_proportion_diff + factor(year)
f2_without_time_fe_diff <- agenda_pct_diff ~ speech_proportion_diff + log_gdp_diff + sc_membership + sc_membership * speech_proportion_diff
f3_diff <- agenda_pct_diff ~ speech_proportion_diff + log_gdp_diff + sc_membership + sc_membership * speech_proportion_diff + sc_membership * log_gdp_diff + factor(year)
f3_without_time_fe_diff <- agenda_pct_diff ~ speech_proportion_diff + log_gdp_diff + sc_membership + sc_membership * speech_proportion_diff + sc_membership * log_gdp_diff
f4_diff <- agenda_pct_diff ~ speech_proportion_diff + log_gdp_diff + sc_membership + sc_membership * speech_proportion_diff + sc_membership * log_gdp_diff + log_gdp_diff * speech_proportion_diff + factor(year)
# Formulas with logit X and Y
f_lgt <- agenda_pct_logit ~ speech_pct_logit + log_gdp + temp_member + factor(year)
f_without_time_fe_lgt <- agenda_pct_logit ~ speech_pct_logit + log_gdp + temp_member
f2_lgt <- agenda_pct_logit ~ speech_pct_logit  + log_gdp + sc_membership + sc_membership * speech_pct_logit + factor(year)
f2_without_time_fe_lgt <- agenda_pct_logit ~ speech_pct_logit + log_gdp + sc_membership + sc_membership * speech_pct_logit
f3_lgt <- agenda_pct_logit ~ speech_pct_logit  + log_gdp + sc_membership + sc_membership * speech_pct_logit + sc_membership * log_gdp + factor(year)
f3_without_time_fe_lgt <- agenda_pct_logit ~ speech_pct_logit  + log_gdp + sc_membership + sc_membership * speech_pct_logit + sc_membership * log_gdp
f4_lgt <- agenda_pct_logit ~ speech_pct_logit + log_gdp + sc_membership + sc_membership * speech_pct_logit + sc_membership * log_gdp + log_gdp * speech_pct_logit + factor(year)
ct_index <- c("country_topic","year")
c_index <- c("country", "year")
