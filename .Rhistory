ggsave("topicdistr.png", device = "png")
qplot(seq(1,65,1), colMeans(model_65@gamma), xlab = "Topic number", ylab = "Mean proportion of documents (0.01 = 1%)") + geom_point() + ggtitle("Mean topic distribution over documents with 65 topics")
load("/Users/lesliehuang/un_findk_110.RData")
load("/Users/lesliehuang/un_findk_120.RData")
load("/Users/lesliehuang/un_findk_130.RData")
load("/Users/lesliehuang/un_findk_140.RData")
load("/Users/lesliehuang/un_findk_150.RData")
load("/Users/lesliehuang/un_findk_160.RData")
load("/Users/lesliehuang/un_findk_170.RData")
load("/Users/lesliehuang/un_findk_180.RData")
load("/Users/lesliehuang/un_findk_190.RData")
load("/Users/lesliehuang/un_findk_200.RData")
load("/Users/lesliehuang/un_findk_210.RData")
load("/Users/lesliehuang/un_findk_220.RData")
load("/Users/lesliehuang/un_findk_230.RData")
load("/Users/lesliehuang/un_findk_240.RData")
load("/Users/lesliehuang/un_findk_250.RData")
load("/Users/lesliehuang/un_findk_270.RData")
save.image("moretuning.RData")
load("/Users/lesliehuang/un_findk_260.RData")
load("/Users/lesliehuang/un_findk_280.RData")
load("/Users/lesliehuang/un_findk_290.RData")
save.image("moretuning.RData")
load("/Users/lesliehuang/un_findk_96.RData")
load("/Users/lesliehuang/un_findk_95.RData")
load("/Users/lesliehuang/un_findk_93.RData")
load("/Users/lesliehuang/un_findk_92.RData")
load("/Users/lesliehuang/un_findk_91.RData")
load("/Users/lesliehuang/un_findk_90.RData")
load("/Users/lesliehuang/un_findk_89.RData")
load("/Users/lesliehuang/un_findk_88.RData")
load("/Users/lesliehuang/un_findk_87.RData")
load("/Users/lesliehuang/un_findk_86.RData")
load("/Users/lesliehuang/un_findk_84.RData")
load("/Users/lesliehuang/un_findk_82.RData")
load("/Users/lesliehuang/un_findk_81.RData")
load("/Users/lesliehuang/un_findk_80.RData")
load("/Users/lesliehuang/un_findk_78.RData")
load("/Users/lesliehuang/un_findk_79.RData")
load("/Users/lesliehuang/un_findk_45.RData")
load("/Users/lesliehuang/un_findk_75.RData")
load("/Users/lesliehuang/un_findk_20.RData")
load("/Users/lesliehuang/un_findk_25.RData")
load("/Users/lesliehuang/un_findk_28.RData")
load("/Users/lesliehuang/un_findk_29.RData")
load("/Users/lesliehuang/un_findk_43.RData")
load("/Users/lesliehuang/un_findk_44.RData")
load("/Users/lesliehuang/un_findk_47.RData")
load("/Users/lesliehuang/un_findk_50.RData")
load("/Users/lesliehuang/un_findk_51.RData")
load("/Users/lesliehuang/un_findk_53.RData")
load("/Users/lesliehuang/un_findk_56.RData")
load("/Users/lesliehuang/un_findk_58.RData")
load("/Users/lesliehuang/un_findk_60.RData")
load("/Users/lesliehuang/un_findk_62.RData")
load("/Users/lesliehuang/un_findk_63.RData")
load("/Users/lesliehuang/un_findk_64.RData")
load("/Users/lesliehuang/un_findk_65.RData")
load("/Users/lesliehuang/un_findk_66.RData")
load("/Users/lesliehuang/un_findk_67.RData")
load("/Users/lesliehuang/un_findk_68.RData")
load("/Users/lesliehuang/un_findk_69.RData")
load("/Users/lesliehuang/un_findk_70.RData")
load("/Users/lesliehuang/un_findk_72.RData")
load("/Users/lesliehuang/un_findk_73.RData")
load("/Users/lesliehuang/un_findk_74.RData")
load("/Users/lesliehuang/un_findk_76.RData")
load("/Users/lesliehuang/un_findk_77.RData")
View(tab)
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_52.RData")
load("/Users/lesliehuang/un_findk_26.RData")
load("/Users/lesliehuang/un_findk_39.RData")
load("/Users/lesliehuang/un_findk_42.RData")
load("/Users/lesliehuang/un_findk_37.RData")
load("/Users/lesliehuang/un_findk_49.RData")
load("/Users/lesliehuang/un_findk_54.RData")
load("/Users/lesliehuang/un_findk_57.RData")
load("/Users/lesliehuang/un_model_75.RData")
load("/Users/lesliehuang/un_findk_42.RData")
load("/Users/lesliehuang/un_findk_22.RData")
load("/Users/lesliehuang/un_findk_23.RData")
load("/Users/lesliehuang/un_findk_26.RData")
load("/Users/lesliehuang/un_findk_32.RData")
load("/Users/lesliehuang/un_findk_31.RData")
load("/Users/lesliehuang/un_findk_49.RData")
load("/Users/lesliehuang/un_findk_33.RData")
load("/Users/lesliehuang/un_findk_35.RData")
load("/Users/lesliehuang/un_findk_36.RData")
load("/Users/lesliehuang/un_findk_37.RData")
load("/Users/lesliehuang/un_findk_38.RData")
load("/Users/lesliehuang/un_findk_39.RData")
load("/Users/lesliehuang/un_findk_40.RData")
load("/Users/lesliehuang/un_findk_46.RData")
load("/Users/lesliehuang/un_findk_52.RData")
load("/Users/lesliehuang/un_findk_54.RData")
load("/Users/lesliehuang/un_findk_57.RData")
load("/Users/lesliehuang/un_findk_100.RData")
load("/Users/lesliehuang/un_findk_40.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_34.RData")
load("/Users/lesliehuang/un_tuning_combined.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_110.RData")
load("/Users/lesliehuang/un_findk_99.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_135.RData")
load("/Users/lesliehuang/un_findk_97.RData")
load("/Users/lesliehuang/un_findk_140.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/kfold_perplexity_41.RData")
load("/Users/lesliehuang/kfold_perplexity_42.RData")
load("/Users/lesliehuang/kfold_perplexity_43.RData")
load("/Users/lesliehuang/kfold_perplexity_44.RData")
load("/Users/lesliehuang/kfold_perplexity_46.RData")
load("/Users/lesliehuang/kfold_perplexity_45.RData")
load("/Users/lesliehuang/kfold_perplexity_47.RData")
load("/Users/lesliehuang/kfold_perplexity_48.RData")
save.image("perplexity_kfold_combined.RData")
load("/Users/lesliehuang/un_findk_150.RData")
load("/Users/lesliehuang/un_findk_24.RData")
load("/Users/lesliehuang/un_findk_155.RData")
load("/Users/lesliehuang/un_findk_145.RData")
load("/Users/lesliehuang/un_findk_21.RData")
load("/Users/lesliehuang/un_findk_160.RData")
load("/Users/lesliehuang/un_findk_165.RData")
load("/Users/lesliehuang/un_findk_170.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/kfold_perplexity_51.RData")
load("/Users/lesliehuang/kfold_perplexity_40.RData")
load("/Users/lesliehuang/kfold_perplexity_50.RData")
load("/Users/lesliehuang/kfold_perplexity_52.RData")
load("/Users/lesliehuang/kfold_perplexity_49.RData")
load("/Users/lesliehuang/kfold_perplexity_53.RData")
load("/Users/lesliehuang/kfold_perplexity_54.RData")
load("/Users/lesliehuang/kfold_perplexity_55.RData")
load("/Users/lesliehuang/kfold_perplexity_56.RData")
load("/Users/lesliehuang/kfold_perplexity_57.RData")
load("/Users/lesliehuang/kfold_perplexity_58.RData")
save.image("perplexity_kfold_combined.RData")
load("/Users/lesliehuang/un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_175.RData")
load("/Users/lesliehuang/un_findk_105.RData")
load("/Users/lesliehuang/un_findk_41.RData")
load("/Users/lesliehuang/un_findk_61.RData")
load("/Users/lesliehuang/un_findk_190.RData")
load("/Users/lesliehuang/un_findk_240.RData")
load("/Users/lesliehuang/un_findk_250.RData")
load("/Users/lesliehuang/un_findk_290.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/kfold_perplexity_61.RData")
load("/Users/lesliehuang/kfold_perplexity_68.RData")
load("/Users/lesliehuang/kfold_perplexity_63.RData")
save.image("perplexity_kfold_combined.RData")
View(perplexity_results_47)
load("/Users/lesliehuang/un_findk_210.RData")
load("/Users/lesliehuang/un_findk_215.RData")
load("/Users/lesliehuang/un_findk_265.RData")
load("/Users/lesliehuang/un_findk_180.RData")
load("/Users/lesliehuang/un_findk_205.RData")
load("/Users/lesliehuang/un_findk_295.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/kfold_perplexity_86.RData")
load("/Users/lesliehuang/kfold_perplexity_82.RData")
load("/Users/lesliehuang/kfold_perplexity_79.RData")
load("/Users/lesliehuang/kfold_perplexity_77.RData")
load("/Users/lesliehuang/kfold_perplexity_85.RData")
save.image("perplexity_kfold_combined.RData")
load("/Users/lesliehuang/un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_300.RData")
save.image("un_tuning_combined.RData")
# Panelssssss
### Set up the workspace
rm(list=ls())
setwd("/Users/lesliehuang/un-analysis-reg/")
set.seed(1234)
libraries <- c("foreign", "utils", "dplyr", "plyr", "devtools", "quanteda", "stringi", "topicmodels", "ldatuning", "lda", "plm", "stargazer", "ggplot2", "tseries", "lmtest", "car")
lapply(libraries, require, character.only=TRUE)
data <- read.csv("../un-jupyter-coding-merging/data_by_country_year_topic_all.csv", stringsAsFactors = TRUE)
# Indices for the plm models
ct_index <- c("country_topic","year")
c_index <- c("country", "year")
# Some important topics
special_topics <- c("demo_elec", "intl_law_settlements", "africa_sec", "climate_envir", "war_terrorism", "development_econ_assistance_poverty", "LLDCs", "island_nations", "mideast_peace", "global_trade", "drugs", "afghan_security", "women_children", "arms_treaties", "food_crisis")
topics <- unique(data$topic)
# Data permutations
data$log_gdp <- log(data$gdp)
data$speech_pct <- data$speech_proportion * 100
data$agenda_pct <- data$proportion_of_agenda * 100
data$sc_membership <- as.factor(data$sc_membership)
data$year <- as.factor(data$year)
# let's try recoding "never" and "not serving" together
data$sc_membership[data$sc_membership == "never"] <- "not_serving"
# and don't include junk
data <- dplyr::filter(data, topic != "junk")
# make another copy
data_by_type <- as.data.table(data)
# filter to just speech_pct exceeding 2%
#data <- dplyr::filter(data, speech_pct > 2)
# filter to just non permanent members
#data <- dplyr::filter(data, sc_membership != "permanent")
###########################################################################
###########################################################################
# Calc new measures within topic
# Calculate each country's speech pct difference from the median and mean for that year
for (topic_name in special_topics) {
df_subset <- data[data$topic == topic_name, ] # subset to just one topic
df_name <- paste("data", topic_name, sep = "_")  # name for later
# Calculate yearly means and medians
df_subset <- dplyr::group_by(df_subset, year)
df_subset <- dplyr::mutate(df_subset, yearly_mean_speech_proportion = mean(speech_proportion))
df_subset <- dplyr::mutate(df_subset, yearly_sd_speech_proportion = sd(speech_proportion))
df_subset <- dplyr::mutate(df_subset, yearly_median_speech_proportion = median(speech_proportion))
# calculate diff from that year's mean and median for each obs
df_subset <- dplyr::mutate(df_subset, speech_proportion_diff_from_median = yearly_median_speech_proportion - speech_proportion)
df_subset <- dplyr::mutate(df_subset, speech_proportion_diff_from_mean = yearly_mean_speech_proportion - speech_proportion)
# and z-score
df_subset <- dplyr::mutate(df_subset, speech_proportion_zscore = (speech_proportion - yearly_mean_speech_proportion ) / yearly_sd_speech_proportion)
# calculate diff from country-mean and country-median
df_subset <- dplyr::ungroup(df_subset)
df_subset <- dplyr::group_by(df_subset, country)
df_subset <- dplyr::mutate(df_subset, country_mean_speech_proportion = mean(speech_proportion))
df_subset <- dplyr::mutate(df_subset, country_sd_speech_proportion = sd(speech_proportion))
df_subset <- dplyr::mutate(df_subset, country_median_speech_proportion = median(speech_proportion))
df_subset <- dplyr::mutate(df_subset, speech_proportion_diff_from_country_median = country_median_speech_proportion - speech_proportion)
df_subset <- dplyr::mutate(df_subset, speech_proportion_diff_from_country_mean = country_mean_speech_proportion - speech_proportion)
# and z-score
df_subset <- dplyr::mutate(df_subset, speech_proportion_country_zscore = (speech_proportion - country_mean_speech_proportion ) / country_sd_speech_proportion)
# dummy for 50 percentile
df_subset <- dplyr::mutate(df_subset, above_yearly_median = speech_proportion > yearly_median_speech_proportion)
#dummy for above mean
df_subset <- dplyr::mutate(df_subset, above_yearly_mean = speech_proportion > yearly_mean_speech_proportion)
assign(df_name, df_subset)
}
data_by_type <- within(data_by_type, sc_membership <- relevel(sc_membership, ref = "not_serving"))
data_leveled <- data_by_type[, .(mean(speech_pct), mean(agenda_pct), median(speech_pct)), by = .(topic, year, sc_membership)]
colnames(data_leveled) <- c("topic", "year", "sc_membership", "mean_speech_pct", "mean_agenda_pct", "median_speech_pct")
# These models work!!!!
grouped_lm <- lm(mean_agenda_pct ~ mean_speech_pct + sc_membership + mean_speech_pct * sc_membership, data = data_leveled)
grouped_fe <- plm(mean_agenda_pct ~ mean_speech_pct + sc_membership + mean_speech_pct * sc_membership, data = data_leveled, index = "year", model = "within")
stargazer(grouped_lm, grouped_fe, digits = 3, title = "Effect of Speech Pct. on Agenda Pct. by Security Council Membership Type", single.row = FALSE, omit.stat = c("f"), dep.var.labels = "Percent of Agenda", column.labels = c("OLS", "Year Fixed Effects"), covariate.labels = c("Speech pct. (Membership Group Mean)", "Permanent SC member", "Temp. SC member", "Permanent member * Speech pct.", "Temp. member * Speech Pct"), notes.append = TRUE, notes = "Membership categorical variable reference level is 'not permanent or currently serving as temporary member.' ")
### Set up the workspace
rm(list=ls())
setwd("/Users/lesliehuang/un-analysis-reg/")
set.seed(1234)
libraries <- c("foreign", "utils", "dplyr", "plyr", "devtools", "quanteda", "stringi", "topicmodels", "ldatuning", "lda", "plm", "stargazer", "ggplot2", "tseries", "lmtest", "car")
lapply(libraries, require, character.only=TRUE)
data <- read.csv("../un-jupyter-coding-merging/data_by_country_year_topic_all.csv", stringsAsFactors = TRUE)
# Indices for the plm models
ct_index <- c("country_topic","year")
c_index <- c("country", "year")
# Some important topics
special_topics <- c("demo_elec", "intl_law_settlements", "africa_sec", "climate_envir", "war_terrorism", "development_econ_assistance_poverty", "LLDCs", "island_nations", "mideast_peace", "global_trade", "drugs", "afghan_security", "women_children", "arms_treaties", "food_crisis")
topics <- unique(data$topic)
# Data permutations
data$log_gdp <- log(data$gdp)
data$speech_pct <- data$speech_proportion * 100
data$agenda_pct <- data$proportion_of_agenda * 100
data$sc_membership <- as.factor(data$sc_membership)
data$year <- as.factor(data$year)
# let's try recoding "never" and "not serving" together
data$sc_membership[data$sc_membership == "never"] <- "not_serving"
# and don't include junk
data <- dplyr::filter(data, topic != "junk")
# make another copy
data_by_type <- as.data.table(data)
# filter to just speech_pct exceeding 2%
#data <- dplyr::filter(data, speech_pct > 2)
# filter to just non permanent members
#data <- dplyr::filter(data, sc_membership != "permanent")
###########################################################################
###########################################################################
# Calc new measures within topic
# Calculate each country's speech pct difference from the median and mean for that year
for (topic_name in special_topics) {
df_subset <- data[data$topic == topic_name, ] # subset to just one topic
df_name <- paste("data", topic_name, sep = "_")  # name for later
# Calculate yearly means and medians
df_subset <- dplyr::group_by(df_subset, year)
df_subset <- dplyr::mutate(df_subset, yearly_mean_speech_proportion = mean(speech_proportion))
df_subset <- dplyr::mutate(df_subset, yearly_sd_speech_proportion = sd(speech_proportion))
df_subset <- dplyr::mutate(df_subset, yearly_median_speech_proportion = median(speech_proportion))
# calculate diff from that year's mean and median for each obs
df_subset <- dplyr::mutate(df_subset, speech_proportion_diff_from_median = yearly_median_speech_proportion - speech_proportion)
df_subset <- dplyr::mutate(df_subset, speech_proportion_diff_from_mean = yearly_mean_speech_proportion - speech_proportion)
# and z-score
df_subset <- dplyr::mutate(df_subset, speech_proportion_zscore = (speech_proportion - yearly_mean_speech_proportion ) / yearly_sd_speech_proportion)
# calculate diff from country-mean and country-median
df_subset <- dplyr::ungroup(df_subset)
df_subset <- dplyr::group_by(df_subset, country)
df_subset <- dplyr::mutate(df_subset, country_mean_speech_proportion = mean(speech_proportion))
df_subset <- dplyr::mutate(df_subset, country_sd_speech_proportion = sd(speech_proportion))
df_subset <- dplyr::mutate(df_subset, country_median_speech_proportion = median(speech_proportion))
df_subset <- dplyr::mutate(df_subset, speech_proportion_diff_from_country_median = country_median_speech_proportion - speech_proportion)
df_subset <- dplyr::mutate(df_subset, speech_proportion_diff_from_country_mean = country_mean_speech_proportion - speech_proportion)
# and z-score
df_subset <- dplyr::mutate(df_subset, speech_proportion_country_zscore = (speech_proportion - country_mean_speech_proportion ) / country_sd_speech_proportion)
# dummy for 50 percentile
df_subset <- dplyr::mutate(df_subset, above_yearly_median = speech_proportion > yearly_median_speech_proportion)
#dummy for above mean
df_subset <- dplyr::mutate(df_subset, above_yearly_mean = speech_proportion > yearly_mean_speech_proportion)
assign(df_name, df_subset)
}
###########################################################################
###########################################################################
# Group by level of sc_membership and average speech pct
data_by_type <- within(data_by_type, sc_membership <- relevel(sc_membership, ref = "not_serving"))
data_leveled <- data_by_type[, .(mean(speech_pct), mean(agenda_pct), median(speech_pct)), by = .(topic, year, sc_membership)]
colnames(data_leveled) <- c("topic", "year", "sc_membership", "mean_speech_pct", "mean_agenda_pct", "median_speech_pct")
# These models work!!!!
grouped_lm <- lm(mean_agenda_pct ~ mean_speech_pct + sc_membership + mean_speech_pct * sc_membership, data = data_leveled)
grouped_fe <- plm(mean_agenda_pct ~ mean_speech_pct + sc_membership + mean_speech_pct * sc_membership, data = data_leveled, index = "year", model = "within")
stargazer(grouped_lm, grouped_fe, digits = 3, title = "Effect of Speech Pct. on Agenda Pct. by Security Council Membership Type", single.row = FALSE, omit.stat = c("f"), dep.var.labels = "Percent of Agenda", column.labels = c("OLS", "Year Fixed Effects"), covariate.labels = c("Speech pct. (Membership Group Mean)", "Permanent SC member", "Temp. SC member", "Permanent member * Speech pct.", "Temp. member * Speech Pct"), notes.append = TRUE, notes = "Membership categorical variable reference level is 'not permanent or currently serving as temporary member.' ")
data_by_type <- as.data.table(data)
### Set up the workspace
rm(list=ls())
setwd("/Users/lesliehuang/un-analysis-reg/")
set.seed(1234)
libraries <- c("foreign", "utils", "dplyr", "plyr", "devtools", "quanteda", "stringi", "topicmodels", "ldatuning", "lda", "plm", "stargazer", "ggplot2", "tseries", "lmtest", "car", "data.table")
lapply(libraries, require, character.only=TRUE)
data <- read.csv("../un-jupyter-coding-merging/data_by_country_year_topic_all.csv", stringsAsFactors = TRUE)
# Indices for the plm models
ct_index <- c("country_topic","year")
c_index <- c("country", "year")
# Some important topics
special_topics <- c("demo_elec", "intl_law_settlements", "africa_sec", "climate_envir", "war_terrorism", "development_econ_assistance_poverty", "LLDCs", "island_nations", "mideast_peace", "global_trade", "drugs", "afghan_security", "women_children", "arms_treaties", "food_crisis")
topics <- unique(data$topic)
# Data permutations
data$log_gdp <- log(data$gdp)
data$speech_pct <- data$speech_proportion * 100
data$agenda_pct <- data$proportion_of_agenda * 100
data$sc_membership <- as.factor(data$sc_membership)
data$year <- as.factor(data$year)
# let's try recoding "never" and "not serving" together
data$sc_membership[data$sc_membership == "never"] <- "not_serving"
# and don't include junk
data <- dplyr::filter(data, topic != "junk")
# make another copy
data_by_type <- as.data.table(data)
# filter to just speech_pct exceeding 2%
#data <- dplyr::filter(data, speech_pct > 2)
# filter to just non permanent members
#data <- dplyr::filter(data, sc_membership != "permanent")
###########################################################################
###########################################################################
# Calc new measures within topic
# Calculate each country's speech pct difference from the median and mean for that year
for (topic_name in special_topics) {
df_subset <- data[data$topic == topic_name, ] # subset to just one topic
df_name <- paste("data", topic_name, sep = "_")  # name for later
# Calculate yearly means and medians
df_subset <- dplyr::group_by(df_subset, year)
df_subset <- dplyr::mutate(df_subset, yearly_mean_speech_proportion = mean(speech_proportion))
df_subset <- dplyr::mutate(df_subset, yearly_sd_speech_proportion = sd(speech_proportion))
df_subset <- dplyr::mutate(df_subset, yearly_median_speech_proportion = median(speech_proportion))
# calculate diff from that year's mean and median for each obs
df_subset <- dplyr::mutate(df_subset, speech_proportion_diff_from_median = yearly_median_speech_proportion - speech_proportion)
df_subset <- dplyr::mutate(df_subset, speech_proportion_diff_from_mean = yearly_mean_speech_proportion - speech_proportion)
# and z-score
df_subset <- dplyr::mutate(df_subset, speech_proportion_zscore = (speech_proportion - yearly_mean_speech_proportion ) / yearly_sd_speech_proportion)
# calculate diff from country-mean and country-median
df_subset <- dplyr::ungroup(df_subset)
df_subset <- dplyr::group_by(df_subset, country)
df_subset <- dplyr::mutate(df_subset, country_mean_speech_proportion = mean(speech_proportion))
df_subset <- dplyr::mutate(df_subset, country_sd_speech_proportion = sd(speech_proportion))
df_subset <- dplyr::mutate(df_subset, country_median_speech_proportion = median(speech_proportion))
df_subset <- dplyr::mutate(df_subset, speech_proportion_diff_from_country_median = country_median_speech_proportion - speech_proportion)
df_subset <- dplyr::mutate(df_subset, speech_proportion_diff_from_country_mean = country_mean_speech_proportion - speech_proportion)
# and z-score
df_subset <- dplyr::mutate(df_subset, speech_proportion_country_zscore = (speech_proportion - country_mean_speech_proportion ) / country_sd_speech_proportion)
# dummy for 50 percentile
df_subset <- dplyr::mutate(df_subset, above_yearly_median = speech_proportion > yearly_median_speech_proportion)
#dummy for above mean
df_subset <- dplyr::mutate(df_subset, above_yearly_mean = speech_proportion > yearly_mean_speech_proportion)
assign(df_name, df_subset)
}
###########################################################################
###########################################################################
# Group by level of sc_membership and average speech pct
data_by_type <- within(data_by_type, sc_membership <- relevel(sc_membership, ref = "not_serving"))
data_leveled <- data_by_type[, .(mean(speech_pct), mean(agenda_pct), median(speech_pct)), by = .(topic, year, sc_membership)]
colnames(data_leveled) <- c("topic", "year", "sc_membership", "mean_speech_pct", "mean_agenda_pct", "median_speech_pct")
# These models work!!!!
grouped_lm <- lm(mean_agenda_pct ~ mean_speech_pct + sc_membership + mean_speech_pct * sc_membership, data = data_leveled)
grouped_fe <- plm(mean_agenda_pct ~ mean_speech_pct + sc_membership + mean_speech_pct * sc_membership, data = data_leveled, index = "year", model = "within")
stargazer(grouped_lm, grouped_fe, digits = 3, title = "Effect of Speech Pct. on Agenda Pct. by Security Council Membership Type", single.row = FALSE, omit.stat = c("f"), dep.var.labels = "Percent of Agenda", column.labels = c("OLS", "Year Fixed Effects"), covariate.labels = c("Speech pct. (Membership Group Mean)", "Permanent SC member", "Temp. SC member", "Permanent member * Speech pct.", "Temp. member * Speech Pct"), notes.append = TRUE, notes = "Membership categorical variable reference level is 'not permanent or currently serving as temporary member.' ")
for (topic in special_topics) {
data_sub <- get(paste("data", topic, sep = "_"))
# try with top 50 percentile
data_sub <- data_sub[data_sub$above_yearly_median == TRUE, ]
# go through the different specifications
f <- agenda_pct ~ speech_proportion + log_gdp + sc_membership + factor(year)
f2 <- agenda_pct ~ speech_proportion + log_gdp + sc_membership + sc_membership * speech_proportion + factor(year)
f3 <- agenda_pct ~ speech_proportion + log_gdp + sc_membership + sc_membership * speech_proportion + sc_membership * log_gdp + factor(year)
f4 <- agenda_pct ~ speech_proportion + log_gdp + sc_membership + sc_membership * speech_proportion + sc_membership * log_gdp + log_gdp * speech_proportion + factor(year)
fe_model_f <- plm(formula = f, data = data_sub, index = c_index, effect = "twoways")
fe_model_f2 <- plm(formula = f2, data = data_sub, index = c_index, effect = "twoways")
fe_model_f3 <- plm(formula = f3, data = data_sub, index = c_index, effect = "twoways")
fe_model_f4 <- plm(formula = f4, data = data_sub, index = c_index, effect = "twoways")
# output the table for this topic
stargazer(fe_model_f, fe_model_f2, fe_model_f3, fe_model_f4, digits = 3, title = paste("Effect of Speeches on Percent of Agenda about ", topic, sep = " "), single.row = FALSE, omit.stat = c("f"), dep.var.labels = "Percent of Agenda",
covariate.labels = c("Speech pct.", "Log GDP", "Temporary member", "Speech Pct. * Perm. member", "Speech Pct. * Temp. member", "Log GDP * Perm. member", "Log GDP * Temp. member", "Speech Pct. * Log GDP"),
notes.append = TRUE, notes = "Independent variable is untransformed percentage of speech about the given topic."
)
}
# FE, X = z-score
for (topic in special_topics) {
data_sub <- get(paste("data", topic, sep = "_"))
# try with top 50 percentile
data_sub <- data_sub[data_sub$above_yearly_median == TRUE, ]
# go through the different specifications
f <- agenda_pct ~ speech_proportion_zscore + log_gdp + sc_membership + factor(year)
f2 <- agenda_pct ~ speech_proportion_zscore + log_gdp + sc_membership + sc_membership * speech_proportion_zscore + factor(year)
f3 <- agenda_pct ~ speech_proportion_zscore + log_gdp + sc_membership + sc_membership * speech_proportion_zscore + sc_membership * log_gdp + factor(year)
f4 <- agenda_pct ~ speech_proportion_zscore + log_gdp + sc_membership + sc_membership * speech_proportion_zscore + sc_membership * log_gdp + log_gdp * speech_proportion_zscore + factor(year)
fe_model_f <- plm(formula = f, data = data_sub, index = c_index, effect = "twoways")
fe_model_f2 <- plm(formula = f2, data = data_sub, index = c_index, effect = "twoways")
fe_model_f3 <- plm(formula = f3, data = data_sub, index = c_index, effect = "twoways")
fe_model_f4 <- plm(formula = f4, data = data_sub, index = c_index, effect = "twoways")
# output the table for this topic
stargazer(fe_model_f, fe_model_f2, fe_model_f3, fe_model_f4, digits = 3, title = paste("Effect of Speeches on Percent of Agenda about", topic, sep = " "), single.row = FALSE, omit.stat = c("f"), dep.var.labels = "Percent of Agenda",
covariate.labels = c("Speech Z-score", "Log GDP", "Temporary member", "Speech Z-score * Perm. member", "Speech Z-score * Temp. member", "Log GDP * Perm. member", "Log GDP * Temp. member", "Speech Z-score * Log GDP"),
notes.append = TRUE, notes = "Main independent variable is z-score (calculated from topic-year mean and SD)."
)
}
######################################################################################
# FE, X = % above median
for (topic in special_topics) {
data_sub <- get(paste("data", topic, sep = "_"))
# try with top 50 percentile
data_sub <- data_sub[data_sub$above_yearly_median == TRUE, ]
# go through the different specifications
f <- agenda_pct ~ speech_proportion_diff_from_median + log_gdp + sc_membership + factor(year)
f2 <- agenda_pct ~ speech_proportion_diff_from_median + log_gdp + sc_membership + sc_membership * speech_proportion_diff_from_median + factor(year)
f3 <- agenda_pct ~ speech_proportion_diff_from_median + log_gdp + sc_membership + sc_membership * speech_proportion_diff_from_median + sc_membership * log_gdp + factor(year)
f4 <- agenda_pct ~ speech_proportion_diff_from_median + log_gdp + sc_membership + sc_membership * speech_proportion_diff_from_median + sc_membership * log_gdp + log_gdp * speech_proportion_diff_from_median + factor(year)
fe_model_f <- plm(formula = f, data = data_sub, index = c_index, effect = "twoways")
fe_model_f2 <- plm(formula = f2, data = data_sub, index = c_index, effect = "twoways")
fe_model_f3 <- plm(formula = f3, data = data_sub, index = c_index, effect = "twoways")
fe_model_f4 <- plm(formula = f4, data = data_sub, index = c_index, effect = "twoways")
# output the table for this topic
stargazer(fe_model_f, fe_model_f2, fe_model_f3, fe_model_f4, digits = 3, title = paste("Effect of Speeches on Percent of Agenda about", topic, sep = " "), single.row = FALSE, omit.stat = c("f"), dep.var.labels = "Percent of Agenda",
covariate.labels = c("Speech Diff. from Median", "Log GDP", "Temporary member", "Speech Diff. from Median * Perm. member", "Speech Diff. from Median * Temp. member", "Log GDP * Perm. member", "Log GDP * Temp. member", "Speech Diff. from Median * Log GDP"),
notes.append = TRUE, notes = "Main independent variable is difference between speech percent for a given country-year-topic observation from the topic-year median."
)
}
######################################################################################
# FE, X = % above mean
for (topic in special_topics) {
data_sub <- get(paste("data", topic, sep = "_"))
# try with top 50 percentile
#data_sub <- data_sub[data_sub$above_yearly_median == TRUE, ]
# go through the different specifications
f <- agenda_pct ~ speech_proportion_diff_from_mean + log_gdp + sc_membership + factor(year)
f2 <- agenda_pct ~ speech_proportion_diff_from_mean + log_gdp + sc_membership + sc_membership * speech_proportion_diff_from_mean + factor(year)
f3 <- agenda_pct ~ speech_proportion_diff_from_mean + log_gdp + sc_membership + sc_membership * speech_proportion_diff_from_mean + sc_membership * log_gdp + factor(year)
f4 <- agenda_pct ~ speech_proportion_diff_from_mean + log_gdp + sc_membership + sc_membership * speech_proportion_diff_from_mean + sc_membership * log_gdp + log_gdp * speech_proportion_diff_from_mean + factor(year)
fe_model_f <- plm(formula = f, data = data_sub, index = c_index, effect = "twoways")
fe_model_f2 <- plm(formula = f2, data = data_sub, index = c_index, effect = "twoways")
fe_model_f3 <- plm(formula = f3, data = data_sub, index = c_index, effect = "twoways")
fe_model_f4 <- plm(formula = f4, data = data_sub, index = c_index, effect = "twoways")
# output the table for this topic
stargazer(fe_model_f, fe_model_f2, fe_model_f3, fe_model_f4, digits = 3, title = paste("Effect of Speeches on Percent of Agenda about", topic, sep = " "), single.row = FALSE, omit.stat = c("f"), dep.var.labels = "Percent of Agenda",
covariate.labels = c("Speech Diff. from Mean", "Log GDP", "Temporary member", "Speech Diff. from Mean * Perm. member", "Speech Diff. from Mean * Temp. member", "Log GDP * Perm. member", "Log GDP * Temp. member", "Speech Diff. from Mean * Log GDP"),
notes.append = TRUE, notes = "Main independent variable is difference between speech percent for a given country-year-topic observation from the topic-year mean."
)
}
######################################################################################
# Run with X = % above country median
for (topic in special_topics) {
data_sub <- get(paste("data", topic, sep = "_"))
# try with top 50 percentile
data_sub <- data_sub[data_sub$above_yearly_median == TRUE, ]
# go through the different specifications
f <- agenda_pct ~ speech_proportion_diff_from_country_median + log_gdp + sc_membership + factor(year)
f2 <- agenda_pct ~ speech_proportion_diff_from_country_median + log_gdp + sc_membership + sc_membership * speech_proportion_diff_from_country_median + factor(year)
f3 <- agenda_pct ~ speech_proportion_diff_from_country_median + log_gdp + sc_membership + sc_membership * speech_proportion_diff_from_country_median + sc_membership * log_gdp + factor(year)
f4 <- agenda_pct ~ speech_proportion_diff_from_country_median + log_gdp + sc_membership + sc_membership * speech_proportion_diff_from_country_median + sc_membership * log_gdp + log_gdp * speech_proportion_diff_from_country_median + factor(year)
fe_model_f <- plm(formula = f, data = data_sub, index = c_index, effect = "twoways")
fe_model_f2 <- plm(formula = f2, data = data_sub, index = c_index, effect = "twoways")
fe_model_f3 <- plm(formula = f3, data = data_sub, index = c_index, effect = "twoways")
fe_model_f4 <- plm(formula = f4, data = data_sub, index = c_index, effect = "twoways")
# output the table for this topic
stargazer(fe_model_f, fe_model_f2, fe_model_f3, fe_model_f4, digits = 3, title = paste("Effect of Speeches on Percent of Agenda about ", topic, sep = " "), single.row = FALSE, omit.stat = c("f"), dep.var.labels = "Percent of Agenda",
covariate.labels = c("Speech Diff. from Median", "Log GDP", "Temporary member", "Speech Diff. from Median * Perm. member", "Speech Diff. from Median * Temp. member", "Log GDP * Perm. member", "Log GDP * Temp. member", "Speech Diff. from Median * Log GDP"),
notes.append = TRUE, notes = "Main independent variable is difference between speech percent for a given country-year-topic observation from the country-topic median."
)
}
data_by_type <- as.data.table(data)
# drop bottom 50 percentile
data_by_type <- data_by_type[data_by_type$above_yearly_median == TRUE, ]
data_leveled <- data_by_type[, .(mean(speech_pct), mean(agenda_pct), median(speech_pct)), by = .(topic, year, sc_membership)]
colnames(data_leveled) <- c("topic", "year", "sc_membership", "mean_speech_pct", "mean_agenda_pct", "median_speech_pct")
# These models work!!!!
grouped_lm <- lm(mean_agenda_pct ~ mean_speech_pct + sc_membership + mean_speech_pct * sc_membership, data = data_leveled)
grouped_fe <- plm(mean_agenda_pct ~ mean_speech_pct + sc_membership + mean_speech_pct * sc_membership, data = data_leveled, index = "year", model = "within")
stargazer(grouped_lm, grouped_fe, digits = 3, title = "Effect of Speech Pct. on Agenda Pct. by Security Council Membership Type", single.row = FALSE, omit.stat = c("f"), dep.var.labels = "Percent of Agenda", column.labels = c("OLS", "Year Fixed Effects"), covariate.labels = c("Speech pct. (Membership Group Mean)", "Permanent SC member", "Temp. SC member", "Permanent member * Speech pct.", "Temp. member * Speech Pct"), notes.append = TRUE, notes = "Membership categorical variable reference level is 'not permanent or currently serving as temporary member.' ")
grouped_lm
summary(grouped_lm)
grouped_lm <- lm(mean_agenda_pct ~ mean_speech_pct + sc_membership + mean_speech_pct * sc_membership, data = data_leveled)
unique(data_leveled$sc_membership)
data_by_type <- as.data.table(data)
data_by_type <- within(data_by_type, sc_membership <- relevel(sc_membership, ref = "not_serving"))
aggregate_median
data_by_type <- data_by_type[data_by_type$speech_pct >= aggregate_median, ]
aggregate_median <- median(data_by_type$speech_pct)
data_by_type <- data_by_type[data_by_type$speech_pct >= aggregate_median, ]
data_leveled <- data_by_type[, .(mean(speech_pct), mean(agenda_pct), median(speech_pct)), by = .(topic, year, sc_membership)]
colnames(data_leveled) <- c("topic", "year", "sc_membership", "mean_speech_pct", "mean_agenda_pct", "median_speech_pct")
grouped_lm <- lm(mean_agenda_pct ~ mean_speech_pct + sc_membership + mean_speech_pct * sc_membership, data = data_leveled)
grouped_fe <- plm(mean_agenda_pct ~ mean_speech_pct + sc_membership + mean_speech_pct * sc_membership, data = data_leveled, index = "year", model = "within")
stargazer(grouped_lm, grouped_fe, digits = 3, title = "Effect of Speech Pct. on Agenda Pct. by Security Council Membership Type", single.row = FALSE, omit.stat = c("f"), dep.var.labels = "Percent of Agenda", column.labels = c("OLS", "Year Fixed Effects"), covariate.labels = c("Speech pct. (Membership Group Mean)", "Permanent SC member", "Temp. SC member", "Permanent member * Speech pct.", "Temp. member * Speech Pct"), notes.append = TRUE, notes = "Membership categorical variable reference level is 'not permanent or currently serving as temporary member.' ")
