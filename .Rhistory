colnames(proportions_by_org) <- colnames(AARI_proportions)
View(proportions_by_org)
View(`AARI proportions`)
View(proportions_by_org)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/lesliehuang/Dropbox/Antarctica topic models/Memos")
load("../STM_K32.RData")
set.seed(1234)
libraries <- c("foreign", "utils", "dplyr", "devtools", "quanteda", "ggplot2", "topicmodels", "stm", "lda", "LDAvis", "jsonlite", "stringi", "stmBrowser")
lapply(libraries, require, character.only=TRUE)
topics_for_corr = c(1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 18, 20, 21, 25, 30, 31, 32)
topic_names <- c("Penguins", "Conservation of fish, birds, marine mammals", "CCAMLR reporting", "Geological surveying", "ATS Scientific Committee", "Climate in S. Ocean", "Protected areas", "Krill", "Whale stocks", "Tourism", "Environment protocol", "Data collection", "Marine search and rescure", "Marine mammals", "Station environmental impact", "Marine protected areas", "Boat tourism", "Temperature monitoring", "ATCM rulemaking")
proportions_by_org <- matrix(data = NA, nrow = 11, ncol = 32)
for (i in 1:length(tab_names)) {
current_tab <- get(tab_names[i])
proportions_by_org[i, ] <- colMeans(current_tab)
}
View(proportions_by_org)
rowSums(proportions_by_org)
# Convert to dataframe
proportions_by_org <- as.data.frame(proportions_by_org, row.names = tab_names)
colnames(proportions_by_org) <- colnames(AARI_proportions)
View(proportions_by_org)
rowSums(proportions_by_org)
proportions_by_org_grouped <- transmute(proportions_by_org,
Species = Topic1 + Topic2 + Topic0 + Topic10 + Topic20,
SciResearch = Topic4 + Topic15 + Topic31 + Topic7, EnvirProtect = Topic8 + Topic21 + Topic25,
Tourism = Topic11 + Topic30  + Topic18,
InterGovCooperation = Topic32 + Topic3 + Topic6 + Topic14,
Junk = Topic5 + Topic12 + Topic13 + Topic16 + Topic17 + Topic19 + Topic22 + Topic23 + Topic24 + Topic26 + Topic27 + Topic28 + Topic29)
proportions_by_org_grouped <- transmute(proportions_by_org,
Species = Topic1 + Topic2 + Topic9 + Topic10 + Topic20,
SciResearch = Topic4 + Topic15 + Topic31 + Topic7, EnvirProtect = Topic8 + Topic21 + Topic25,
Tourism = Topic11 + Topic30  + Topic18,
InterGovCooperation = Topic32 + Topic3 + Topic6 + Topic14,
Junk = Topic5 + Topic12 + Topic13 + Topic16 + Topic17 + Topic19 + Topic22 + Topic23 + Topic24 + Topic26 + Topic27 + Topic28 + Topic29)
proportions_by_org_grouped
View(proportions_by_org_grouped)
rowSums(proportions_by_org_grouped)
rownames(proportions_by_org_grouped) <- rownames(proportions_by_org)
View(proportions_by_org_grouped)
write.csv(proportions_by_org, "topic_proportions_by_org.csv")
write.csv(proportions_by_org, file = "topic_proportions_by_org.csv")
View(proportions_by_org)
getwd()
setwd("./")
getwd()
dirname(parent.frame(2)$ofile)
source("un-analysis.cluster.R")
dirname("un-analysis-cluster.R")
source("un-analysis-cluster.R")
Sys.getenv()
Sys.getenv("home")
Sys.getenv("R_HOME")
Sys.getenv("HOME")
parallel::detect.Cores()
detect.Cores()
detectCores()
parallel::detectCores()
load("/Users/lesliehuang/un-analysis/un_img_new_dfm.RData")
rm(result)
rm(result3)
rm(result2)
save.image("un_base_workspace.RData")
num_cores <- max(parallel::detectCores() - 1, 1)
print(num_cores)
print(num_cores)
load("/Users/lesliehuang/Desktop/un_img_new_dfm_10-30-17.RData")
load("/Users/lesliehuang/Desktop/un_img_new_dfm_75.RData")
load("~/Desktop/un_model_50.RData")
load("~/Desktop/un_model_65.RData")
load("~/Desktop/un_model_75.RData")
save.image("~Desktop/un_models.RData")
save.image("~/Desktop/un_models.RData")
View(result_20)
load("/Users/lesliehuang/un_findk_21.RData")
load("/Users/lesliehuang/un_findk_22.RData")
load("/Users/lesliehuang/un_findk_25.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_30.RData")
load("/Users/lesliehuang/Desktop/un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_29.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_tuning_combined.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_32.RData")
load("/Users/lesliehuang/un_findk_37.RData")
load("/Users/lesliehuang/un_findk_40.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_50.RData")
load("/Users/lesliehuang/un_findk_51.RData")
load("/Users/lesliehuang/un_findk_53.RData")
load("/Users/lesliehuang/un_findk_58.RData")
load("/Users/lesliehuang/un_tuning_combined.RData")
save.image("un_tuning_combined.RData")
View(result_20)
load("/Users/lesliehuang/Desktop/un_findk1.RData")
View(result)
View(result_40)
View(result)
View(result_40)
View(result)
View(result_50)
View(result)
load("/Users/lesliehuang/un_findk_55.RData")
load("/Users/lesliehuang/un_findk_57.RData")
load("/Users/lesliehuang/un_findk_60.RData")
load("/Users/lesliehuang/un_findk_61.RData")
load("/Users/lesliehuang/un_findk_63.RData")
load("/Users/lesliehuang/un_findk_65.RData")
load("/Users/lesliehuang/un_findk_68.RData")
load("/Users/lesliehuang/un_findk_75.RData")
load("/Users/lesliehuang/un_tuning_combined.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_95.RData")
load("/Users/lesliehuang/un_findk_93.RData")
load("/Users/lesliehuang/un_findk_90.RData")
load("/Users/lesliehuang/un_findk_89.RData")
load("/Users/lesliehuang/un_findk_87.RData")
load("/Users/lesliehuang/un_findk_82.RData")
load("/Users/lesliehuang/un_findk_81.RData")
load("/Users/lesliehuang/un_findk_79.RData")
load("/Users/lesliehuang/un_findk_77.RData")
load("/Users/lesliehuang/un_findk_72.RData")
load("/Users/lesliehuang/un_findk_69.RData")
load("/Users/lesliehuang/un_findk_68.RData")
load("/Users/lesliehuang/un_findk_64.RData")
load("/Users/lesliehuang/un_findk_47.RData")
load("/Users/lesliehuang/un_findk_42.RData")
load("/Users/lesliehuang/un_findk_80.RData")
load("/Users/lesliehuang/un_findk_85.RData")
load("/Users/lesliehuang/un_tuning_combined.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/perplexity_65.RData")
perplexity_test_60
load("/Users/lesliehuang/perplexitytest_60.RData")
load("/Users/lesliehuang/perplexitytest_65.RData")
load("/Users/lesliehuang/perplexitytest_70.RData")
load("/Users/lesliehuang/perplexitytest_75.RData")
load("/Users/lesliehuang/perplexitytest_80.RData")
save.image("perplexitytest_combined.RData")
View(perplexity_results_55)
View(perplexity_results_55)
load("/Users/lesliehuang/kfold_perplexity_60.RData")
load("/Users/lesliehuang/kfold_perplexity_65.RData")
View(perplexity_results_60)
load("/Users/lesliehuang/kfold_perplexity_70.RData")
load("/Users/lesliehuang/kfold_perplexity_75.RData")
load("/Users/lesliehuang/kfold_perplexity_80.RData")
View(perplexity_results_55)
save.image("perplexity_kfold_combined.RData")
load("/Users/lesliehuang/kfold_perplexity_40.RData")
save(tab, file = "test.RData")
View(tab)
load("~/un-analysis/full_tm_workspace.RData")
model_75
model_75$gamma
model_75@gamma
View(model_75@gamma)
topic_distr_over_docs <- model_75@gamma
write.csv(topic_distr_over_docs, file = "topic_distr_over_docs_75.csv")
colMeans(topic_distr_over_docs)
max(colMeans(topic_distr_over_docs))
qplot(seq(1,75,1), colMeans(topic_distr_over_docs), xlab = "Topic number", ylab = "Mean proportion of documents") + geom_line() + ggtitle("Mean topic distribution over documents")
library(ggplot2)
qplot(seq(1,75,1), colMeans(topic_distr_over_docs), xlab = "Topic number", ylab = "Mean proportion of documents") + geom_line() + ggtitle("Mean topic distribution over documents")
qplot(seq(1,75,1), colMeans(topic_distr_over_docs), xlab = "Topic number", ylab = "Mean proportion of documents") + geom_point() + ggtitle("Mean topic distribution over documents")
ggsave("topicdistr.png", device = "png")
qplot(seq(1,75,1), colMeans(topic_distr_over_docs), xlab = "Topic number", ylab = "Mean proportion of documents (0.01 = 1%)") + geom_point() + ggtitle("Mean topic distribution over documents")
ggsave("topicdistr.png", device = "png")
qplot(seq(1,75,1), mean_topic_distr, xlab = "Topic number", ylab = "Mean proportion of documents (0.01 = 1%)") + geom_point() + ggtitle("Mean topic distribution over documents")
mean_topic_distr <- colMeans(topic_distr_over_docs)
qplot(seq(1,75,1), mean_topic_distr, xlab = "Topic number", ylab = "Mean proportion of documents (0.01 = 1%)") + geom_point() + ggtitle("Mean topic distribution over documents")
ggsave("topicdistr.png", device = "png")
qplot(seq(1,65,1), colMeans(model_65@gamma), xlab = "Topic number", ylab = "Mean proportion of documents (0.01 = 1%)") + geom_point() + ggtitle("Mean topic distribution over documents")
qplot(seq(1,75,1), mean_topic_distr, xlab = "Topic number", ylab = "Mean proportion of documents (0.01 = 1%)") + geom_point() + ggtitle("Mean topic distribution over documents with 75 topics")
ggsave("topicdistr.png", device = "png")
qplot(seq(1,65,1), colMeans(model_65@gamma), xlab = "Topic number", ylab = "Mean proportion of documents (0.01 = 1%)") + geom_point() + ggtitle("Mean topic distribution over documents with 65 topics")
load("/Users/lesliehuang/un_findk_110.RData")
load("/Users/lesliehuang/un_findk_120.RData")
load("/Users/lesliehuang/un_findk_130.RData")
load("/Users/lesliehuang/un_findk_140.RData")
load("/Users/lesliehuang/un_findk_150.RData")
load("/Users/lesliehuang/un_findk_160.RData")
load("/Users/lesliehuang/un_findk_170.RData")
load("/Users/lesliehuang/un_findk_180.RData")
load("/Users/lesliehuang/un_findk_190.RData")
load("/Users/lesliehuang/un_findk_200.RData")
load("/Users/lesliehuang/un_findk_210.RData")
load("/Users/lesliehuang/un_findk_220.RData")
load("/Users/lesliehuang/un_findk_230.RData")
load("/Users/lesliehuang/un_findk_240.RData")
load("/Users/lesliehuang/un_findk_250.RData")
load("/Users/lesliehuang/un_findk_270.RData")
save.image("moretuning.RData")
load("/Users/lesliehuang/un_findk_260.RData")
load("/Users/lesliehuang/un_findk_280.RData")
load("/Users/lesliehuang/un_findk_290.RData")
save.image("moretuning.RData")
load("/Users/lesliehuang/un_findk_96.RData")
load("/Users/lesliehuang/un_findk_95.RData")
load("/Users/lesliehuang/un_findk_93.RData")
load("/Users/lesliehuang/un_findk_92.RData")
load("/Users/lesliehuang/un_findk_91.RData")
load("/Users/lesliehuang/un_findk_90.RData")
load("/Users/lesliehuang/un_findk_89.RData")
load("/Users/lesliehuang/un_findk_88.RData")
load("/Users/lesliehuang/un_findk_87.RData")
load("/Users/lesliehuang/un_findk_86.RData")
load("/Users/lesliehuang/un_findk_84.RData")
load("/Users/lesliehuang/un_findk_82.RData")
load("/Users/lesliehuang/un_findk_81.RData")
load("/Users/lesliehuang/un_findk_80.RData")
load("/Users/lesliehuang/un_findk_78.RData")
load("/Users/lesliehuang/un_findk_79.RData")
load("/Users/lesliehuang/un_findk_45.RData")
load("/Users/lesliehuang/un_findk_75.RData")
load("/Users/lesliehuang/un_findk_20.RData")
load("/Users/lesliehuang/un_findk_25.RData")
load("/Users/lesliehuang/un_findk_28.RData")
load("/Users/lesliehuang/un_findk_29.RData")
load("/Users/lesliehuang/un_findk_43.RData")
load("/Users/lesliehuang/un_findk_44.RData")
load("/Users/lesliehuang/un_findk_47.RData")
load("/Users/lesliehuang/un_findk_50.RData")
load("/Users/lesliehuang/un_findk_51.RData")
load("/Users/lesliehuang/un_findk_53.RData")
load("/Users/lesliehuang/un_findk_56.RData")
load("/Users/lesliehuang/un_findk_58.RData")
load("/Users/lesliehuang/un_findk_60.RData")
load("/Users/lesliehuang/un_findk_62.RData")
load("/Users/lesliehuang/un_findk_63.RData")
load("/Users/lesliehuang/un_findk_64.RData")
load("/Users/lesliehuang/un_findk_65.RData")
load("/Users/lesliehuang/un_findk_66.RData")
load("/Users/lesliehuang/un_findk_67.RData")
load("/Users/lesliehuang/un_findk_68.RData")
load("/Users/lesliehuang/un_findk_69.RData")
load("/Users/lesliehuang/un_findk_70.RData")
load("/Users/lesliehuang/un_findk_72.RData")
load("/Users/lesliehuang/un_findk_73.RData")
load("/Users/lesliehuang/un_findk_74.RData")
load("/Users/lesliehuang/un_findk_76.RData")
load("/Users/lesliehuang/un_findk_77.RData")
View(tab)
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_52.RData")
load("/Users/lesliehuang/un_findk_26.RData")
load("/Users/lesliehuang/un_findk_39.RData")
load("/Users/lesliehuang/un_findk_42.RData")
load("/Users/lesliehuang/un_findk_37.RData")
load("/Users/lesliehuang/un_findk_49.RData")
load("/Users/lesliehuang/un_findk_54.RData")
load("/Users/lesliehuang/un_findk_57.RData")
load("/Users/lesliehuang/un_model_75.RData")
load("/Users/lesliehuang/un_findk_42.RData")
load("/Users/lesliehuang/un_findk_22.RData")
load("/Users/lesliehuang/un_findk_23.RData")
load("/Users/lesliehuang/un_findk_26.RData")
load("/Users/lesliehuang/un_findk_32.RData")
load("/Users/lesliehuang/un_findk_31.RData")
load("/Users/lesliehuang/un_findk_49.RData")
load("/Users/lesliehuang/un_findk_33.RData")
load("/Users/lesliehuang/un_findk_35.RData")
load("/Users/lesliehuang/un_findk_36.RData")
load("/Users/lesliehuang/un_findk_37.RData")
load("/Users/lesliehuang/un_findk_38.RData")
load("/Users/lesliehuang/un_findk_39.RData")
load("/Users/lesliehuang/un_findk_40.RData")
load("/Users/lesliehuang/un_findk_46.RData")
load("/Users/lesliehuang/un_findk_52.RData")
load("/Users/lesliehuang/un_findk_54.RData")
load("/Users/lesliehuang/un_findk_57.RData")
load("/Users/lesliehuang/un_findk_100.RData")
load("/Users/lesliehuang/un_findk_40.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_34.RData")
load("/Users/lesliehuang/un_tuning_combined.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_110.RData")
load("/Users/lesliehuang/un_findk_99.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_135.RData")
load("/Users/lesliehuang/un_findk_97.RData")
load("/Users/lesliehuang/un_findk_140.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/kfold_perplexity_41.RData")
load("/Users/lesliehuang/kfold_perplexity_42.RData")
load("/Users/lesliehuang/kfold_perplexity_43.RData")
load("/Users/lesliehuang/kfold_perplexity_44.RData")
load("/Users/lesliehuang/kfold_perplexity_46.RData")
load("/Users/lesliehuang/kfold_perplexity_45.RData")
load("/Users/lesliehuang/kfold_perplexity_47.RData")
load("/Users/lesliehuang/kfold_perplexity_48.RData")
save.image("perplexity_kfold_combined.RData")
load("/Users/lesliehuang/un_findk_150.RData")
load("/Users/lesliehuang/un_findk_24.RData")
load("/Users/lesliehuang/un_findk_155.RData")
load("/Users/lesliehuang/un_findk_145.RData")
load("/Users/lesliehuang/un_findk_21.RData")
load("/Users/lesliehuang/un_findk_160.RData")
load("/Users/lesliehuang/un_findk_165.RData")
load("/Users/lesliehuang/un_findk_170.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/kfold_perplexity_51.RData")
load("/Users/lesliehuang/kfold_perplexity_40.RData")
load("/Users/lesliehuang/kfold_perplexity_50.RData")
load("/Users/lesliehuang/kfold_perplexity_52.RData")
load("/Users/lesliehuang/kfold_perplexity_49.RData")
load("/Users/lesliehuang/kfold_perplexity_53.RData")
load("/Users/lesliehuang/kfold_perplexity_54.RData")
load("/Users/lesliehuang/kfold_perplexity_55.RData")
load("/Users/lesliehuang/kfold_perplexity_56.RData")
load("/Users/lesliehuang/kfold_perplexity_57.RData")
load("/Users/lesliehuang/kfold_perplexity_58.RData")
save.image("perplexity_kfold_combined.RData")
load("/Users/lesliehuang/un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_175.RData")
load("/Users/lesliehuang/un_findk_105.RData")
load("/Users/lesliehuang/un_findk_41.RData")
load("/Users/lesliehuang/un_findk_61.RData")
load("/Users/lesliehuang/un_findk_190.RData")
load("/Users/lesliehuang/un_findk_240.RData")
load("/Users/lesliehuang/un_findk_250.RData")
load("/Users/lesliehuang/un_findk_290.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/kfold_perplexity_61.RData")
load("/Users/lesliehuang/kfold_perplexity_68.RData")
load("/Users/lesliehuang/kfold_perplexity_63.RData")
save.image("perplexity_kfold_combined.RData")
View(perplexity_results_47)
load("/Users/lesliehuang/un_findk_210.RData")
load("/Users/lesliehuang/un_findk_215.RData")
load("/Users/lesliehuang/un_findk_265.RData")
load("/Users/lesliehuang/un_findk_180.RData")
load("/Users/lesliehuang/un_findk_205.RData")
load("/Users/lesliehuang/un_findk_295.RData")
save.image("un_tuning_combined.RData")
load("/Users/lesliehuang/kfold_perplexity_86.RData")
load("/Users/lesliehuang/kfold_perplexity_82.RData")
load("/Users/lesliehuang/kfold_perplexity_79.RData")
load("/Users/lesliehuang/kfold_perplexity_77.RData")
load("/Users/lesliehuang/kfold_perplexity_85.RData")
save.image("perplexity_kfold_combined.RData")
load("/Users/lesliehuang/un_tuning_combined.RData")
load("/Users/lesliehuang/un_findk_300.RData")
save.image("un_tuning_combined.RData")
load("full_tm_workspace.RData")
load("/Users/lesliehuang/un-analysis/full_tm_workspace.RData")
View(ldatuning_results)
View(combined_perplexity_results)
load("~/un-analysis/un_base_workspace.RData")
summary(gd_speeches)
un_dfm
View(xtab_df)
rowMeans(xtab_df)
tab
mean(tab$freq)
sd(tab$freq)
summary(un_dfm)
un_dfm
ntoken(un_dfm)
mean(ntoken(un_dfm))
sd(ntoken(un_dfm))
mean(nfeature(un_dfm))
nfeature_un_dfm
nfeature(un_dfm)
mean(ntype(un_dfm))
sd(ntype(un_dfm))
load("~/un-analysis-reg/un_reg_base.RData")
load("~/un-analysis/un_base_workspace.RData")
ntoken(un_dfm)
ntoken(un_corpus)
colSums(rowSums(un_dfm))
colSums(un_dfm)
sum(colSums(un_dfm))
# Leslie Huang
# Panelssssss
### Set up the workspace
rm(list=ls())
setwd("/Users/lesliehuang/un-analysis-reg/")
set.seed(1234)
libraries <- c("foreign", "utils", "dplyr", "plyr", "devtools", "quanteda", "stringi", "topicmodels", "ldatuning", "lda", "plm", "stargazer", "ggplot2", "tseries", "lmtest", "car", "data.table")
lapply(libraries, require, character.only=TRUE)
data <- read.csv("../un-jupyter-coding-merging/data_by_country_year_topic_all.csv", stringsAsFactors = TRUE)
voting_only <- read.csv("../un-jupyter-coding-merging/data_by_country_year_topic_voting_only.csv", stringsAsFactors = TRUE)
consensus_only <- read.csv("../un-jupyter-coding-merging/data_by_country_year_topic_consensus_only.csv", stringsAsFactors = TRUE)
# Indices for the plm models
ct_index <- c("country_topic", "session_num")
c_index <- c("country", "session_num")
# Data permutations
recode_data <- function(df) {
# fix some session numbers that were incorrect
df[(df$record_name == "A/55/PV.15") & (df$country == "Colombia"),]$session_num <- "59"
df[(df$record_name == "A/49/PV.12") & (df$country == "Malaysia"),]$session_num <- "50"
df[(df$record_name == "A/49/PV.12") & (df$country == "Malaysia"),]$session_num <- "50"
df[(df$record_name == "A/50/PV.27") & (df$country == "Maldives"),]$session_num <- "51"
df[(df$record_name == "A/50/PV.4") & (df$country == "Nepal"),]$session_num <- "59"
df[(df$year == "2009") & (df$country == "Niger"),]$session_num <- "64"
df[(df$year == "1999") & (df$country == "Niger"),]$session_num <- "54"
df[(df$record_name == "A/65/PV.21") & (df$country == "Grenada"),]$session_num <- "66"
df[(df$year == "2011") & (df$country == "Libya"),]$session_num <- "66"
df[(df$record_name == "A/65/PV.11") & (df$country == "Oman"),]$session_num <- "64"
df$log_gdp <- log(df$gdp)
df$speech_pct <- df$speech_proportion * 100
df$agenda_pct <- df$proportion_of_agenda * 100
df$year <- as.factor(df$year)
df$session_num <- as.factor(df$session_num)
# let's try recoding "never" and "not serving" together
df$sc_membership[df$sc_membership == "never"] <- "not_serving"
df$sc_membership <- droplevels(df$sc_membership)
# and don't include junk
df <- dplyr::filter(df, topic != "junk")
return(df)
}
data <- recode_data(data)
data_voting <- recode_data(voting_only)
data_consensus <- recode_data(consensus_only)
mean(data$agenda_pct)
median(data$agenda_pct)
sd(data$agenda_pct)
# Leslie Huang
# Panelssssss
### Set up the workspace
rm(list=ls())
setwd("/Users/lesliehuang/un-analysis-reg/")
set.seed(1234)
libraries <- c("foreign", "utils", "dplyr", "plyr", "devtools", "quanteda", "stringi", "topicmodels", "ldatuning", "lda", "plm", "stargazer", "ggplot2", "tseries", "lmtest", "car", "data.table")
lapply(libraries, require, character.only=TRUE)
data <- read.csv("../un-jupyter-coding-merging/data_by_country_year_topic_all.csv", stringsAsFactors = TRUE)
voting_only <- read.csv("../un-jupyter-coding-merging/data_by_country_year_topic_voting_only.csv", stringsAsFactors = TRUE)
consensus_only <- read.csv("../un-jupyter-coding-merging/data_by_country_year_topic_consensus_only.csv", stringsAsFactors = TRUE)
data <- voting_only
# Indices for the plm models
ct_index <- c("country_topic", "session_num")
c_index <- c("country", "session_num")
# Data permutations
recode_data <- function(df) {
# fix some session numbers that were incorrect
df[(df$record_name == "A/55/PV.15") & (df$country == "Colombia"),]$session_num <- "59"
df[(df$record_name == "A/49/PV.12") & (df$country == "Malaysia"),]$session_num <- "50"
df[(df$record_name == "A/49/PV.12") & (df$country == "Malaysia"),]$session_num <- "50"
df[(df$record_name == "A/50/PV.27") & (df$country == "Maldives"),]$session_num <- "51"
df[(df$record_name == "A/50/PV.4") & (df$country == "Nepal"),]$session_num <- "59"
df[(df$year == "2009") & (df$country == "Niger"),]$session_num <- "64"
df[(df$year == "1999") & (df$country == "Niger"),]$session_num <- "54"
df[(df$record_name == "A/65/PV.21") & (df$country == "Grenada"),]$session_num <- "66"
df[(df$year == "2011") & (df$country == "Libya"),]$session_num <- "66"
df[(df$record_name == "A/65/PV.11") & (df$country == "Oman"),]$session_num <- "64"
df$log_gdp <- log(df$gdp)
df$speech_pct <- df$speech_proportion * 100
df$agenda_pct <- df$proportion_of_agenda * 100
df$year <- as.factor(df$year)
df$session_num <- as.factor(df$session_num)
# let's try recoding "never" and "not serving" together
df$sc_membership[df$sc_membership == "never"] <- "not_serving"
df$sc_membership <- droplevels(df$sc_membership)
# and don't include junk
df <- dplyr::filter(df, topic != "junk")
return(df)
}
data <- recode_data(data)
data_voting <- recode_data(voting_only)
data_consensus <- recode_data(consensus_only)
# Some important topics
special_topics <- c("AIDS", "syria", "demo_elec", "africa_sec", "human_rights", "climate_envir", "war_terrorism", "LLDCs", "island_nations", "mideast_peace", "drugs", "pko")
special_topics_labels <- as.data.frame(t(c("Disease", "Syria conflict", "Democracy", "Africa security and conflict", "Human rights", "Climate change, the environment, and natural resources", "War and terrorism", "Landlocked least developed states", "Small island developing states", "Middle East peace", "Transnational crime", "Peacekeeping operations")))
colnames(special_topics_labels) <- special_topics
topics <- unique(data$topic)
# make another copy
data_by_type <- as.data.table(data)
data_by_type_voting <- as.data.table(data_voting)
data_by_type_consensus <- as.data.table(data_consensus)
# filter to just speech_pct exceeding 2%
#data <- dplyr::filter(data, speech_pct > 2)
###########################################################################
###########################################################################
# Calc new measures within topic
# Calculate each country's speech pct difference from the median and mean for that year
for (topic_name in topics) {
df_subset <- data[data$topic == topic_name, ] # subset to just one topic
df_name <- paste("data", topic_name, sep = "_")  # name for later
# Calculate yearly means and medians
df_subset <- dplyr::group_by(df_subset, session_num)
df_subset <- dplyr::mutate(df_subset, yearly_mean_speech_proportion = mean(speech_proportion))
df_subset <- dplyr::mutate(df_subset, yearly_sd_speech_proportion = sd(speech_proportion))
df_subset <- dplyr::mutate(df_subset, yearly_median_speech_proportion = median(speech_proportion))
# calculate diff from that year's mean and median for each obs
df_subset <- dplyr::mutate(df_subset, speech_proportion_diff_from_median = yearly_median_speech_proportion - speech_proportion)
df_subset <- dplyr::mutate(df_subset, speech_proportion_diff_from_mean = yearly_mean_speech_proportion - speech_proportion)
# and z-score
df_subset <- dplyr::mutate(df_subset, speech_proportion_zscore = (speech_proportion - yearly_mean_speech_proportion ) / yearly_sd_speech_proportion)
# calculate diff from country-mean and country-median
df_subset <- dplyr::ungroup(df_subset)
df_subset <- dplyr::group_by(df_subset, country)
df_subset <- dplyr::mutate(df_subset, country_mean_speech_proportion = mean(speech_proportion))
df_subset <- dplyr::mutate(df_subset, country_sd_speech_proportion = sd(speech_proportion))
df_subset <- dplyr::mutate(df_subset, country_median_speech_proportion = median(speech_proportion))
df_subset <- dplyr::mutate(df_subset, speech_proportion_diff_from_country_median = country_median_speech_proportion - speech_proportion)
df_subset <- dplyr::mutate(df_subset, speech_proportion_diff_from_country_mean = country_mean_speech_proportion - speech_proportion)
# and z-score
df_subset <- dplyr::mutate(df_subset, speech_proportion_country_zscore = (speech_proportion - country_mean_speech_proportion ) / country_sd_speech_proportion)
# dummy for 50 percentile
df_subset <- dplyr::mutate(df_subset, above_yearly_median = speech_proportion > yearly_median_speech_proportion)
#dummy for above mean
df_subset <- dplyr::mutate(df_subset, above_yearly_mean = speech_proportion > yearly_mean_speech_proportion)
df_subset <- unique(df_subset)
assign(df_name, df_subset)
}
sd(data$agenda_pct)
median(data$agenda_pct)
mean(data$agenda_pct)
